# name of our workflow
name: Django CI Workflow

# triggers for our workflow
on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - develop
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - develop


# three job definition
jobs:
  health-check-job: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
    env: # Django Settings + Slack Webhook
      SECRET_KEY_RAZ: test§$%§$§%
      DJANGO_SETTINGS_MODULE: ionescu77v2Project.settings.travis
      DATABASE_NAME: github-actions
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }} # Set token for Coveralls
    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres:10
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' # if you want multiple python version run just use matrix strategy in job config. See the documentation of GitHub Actions
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Upgrade pip
        run: pip install --upgrade pip
      - name: Install requirements # install application requirements
        run: pip install -r requirements/test.txt
      # - name: Check Syntax # check code formatting
      #   run: pycodestyle --statistics .
#      - name: Wemake Python Stylguide
#        uses: wemake-services/wemake-python-styleguide@0.14.1
#        continue-on-error: true
#        with:
#          # 'github-pr-review', 'github-pr-check', 'terminal'
#          reporter: 'terminal'      # remove pr-review, to many API calls to many warnings
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Migrations # run migrations to create table in side car db container
        run: python src/manage.py migrate

      - name: Run Unit Tests  # running tests
        run: |
          coverage run --include=blogengine/* --omit=blogengine/migrations/* src/manage.py test blogengine
          coverage run --include=accounts/* --omit=accounts/migrations/* src/manage.py test accounts

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github

      - uses: act10ns/slack@v1  # post workflow status to slack
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ionescu77website'
        if: always()

  coveralls_finish:
      needs: health-check-job
      runs-on: ubuntu-latest
      steps:
      - name: Coveralls Finished report
        uses: AndreMiras/coveralls-python-action@develop
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          parallel-finished: true
          flag-name: github_action_tests
          base-path: '.'
          debug: true
